package com.datalingo.one.service.impl;

import com.datalingo.one.dto.QueryRequest;
import com.datalingo.one.dto.QueryResponse;
import com.datalingo.one.service.QueryExecutorService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

@Service
public class PostgresQueryExecutor implements QueryExecutorService {

    private final JdbcTemplate jdbcTemplate;

    @Autowired
    public PostgresQueryExecutor(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    public QueryResponse executeQuery(QueryRequest request) {
        String sql = request.getQuery();

        // Execute SQL and get list of rows (each row is a map of column -> value)
        List<Map<String, Object>> rows = jdbcTemplate.queryForList(sql);

        // Prepare response object
        QueryResponse response = new QueryResponse();
        response.setResult(rows);
        return response;
    }
}
