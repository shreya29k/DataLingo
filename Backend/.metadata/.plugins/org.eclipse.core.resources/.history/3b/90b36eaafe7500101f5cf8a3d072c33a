package com.datalingo.one.service;
//
//import com.datalingo.one.dto.QueryRequest;
//import com.datalingo.one.dto.QueryResponse;
//import com.datalingo.one.dto.DatabaseConfig;
//import com.datalingo.one.dto.DatabaseMetadata;
//import com.datalingo.one.dto.DatabaseType;
//import com.datalingo.one.dto.QueryExecutionResult;
//
//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.jdbc.core.JdbcTemplate;
//import org.springframework.jdbc.core.ResultSetExtractor;
//import org.springframework.jdbc.datasource.DriverManagerDataSource;
//import org.springframework.stereotype.Service;
//
//import javax.sql.DataSource;
//import java.sql.*;
//import java.util.*;
//import java.util.concurrent.ConcurrentHashMap;
//
//@Service
//public class DataSourceService {
//    
//    private static final Logger log = LoggerFactory.getLogger(DataSourceService.class);
//    
//    private final Map<String, DataSource> dataSources = new ConcurrentHashMap<>();
//    private final Map<String, JdbcTemplate> jdbcTemplates = new ConcurrentHashMap<>();
//    
//    @Autowired
//    private DatabaseConfigService databaseConfigService;
//    
//    /**
//     * Execute a generated SQL query against the specified database
//     */
//    public QueryExecutionResult executeQuery(String databaseId, String sqlQuery, DatabaseType dbType) {
//        long startTime = System.currentTimeMillis();
//        
//        try {
//            log.info("Executing query on database: {}", databaseId);
//            log.debug("SQL Query: {}", sqlQuery);
//            
//            JdbcTemplate jdbcTemplate = getJdbcTemplate(databaseId, dbType);
//            
//            // Determine query type and execute accordingly
//            String queryType = determineQueryType(sqlQuery);
//            
//            switch (queryType.toLowerCase()) {
//                case "select":
//                    return executeSelectQuery(jdbcTemplate, sqlQuery, startTime);
//                case "insert":
//                case "update":
//                case "delete":
//                    return executeUpdateQuery(jdbcTemplate, sqlQuery, startTime);
//                default:
//                    return executeGenericQuery(jdbcTemplate, sqlQuery, startTime);
//            }
//            
//        } catch (Exception e) {
//            log.error("Error executing query: {}", e.getMessage(), e);
//            return QueryExecutionResult.error(e.getMessage(), System.currentTimeMillis() - startTime);
//        }
//    }
//    
//    /**
//     * Execute SELECT queries and return result set with complete data
//     */
//    private QueryExecutionResult executeSelectQuery(JdbcTemplate jdbcTemplate, String sqlQuery, long startTime) {
//        try {
//            List<Map<String, Object>> results = jdbcTemplate.queryForList(sqlQuery);
//            
//            QueryExecutionResult result = new QueryExecutionResult();
//            result.setSuccess(true);
//            result.setQueryType("SELECT");
//            result.setResultSet(results);
//            result.setRowCount(results.size());
//            result.setExecutionTimeMs(System.currentTimeMillis() - startTime);
//            
//            // Extract column metadata and data types
//            if (!results.isEmpty()) {
//                Map<String, Object> firstRow = results.get(0);
//                List<String> columns = new ArrayList<>(firstRow.keySet());
//                result.setColumns(columns);
//                
//                // Extract column types
//                Map<String, String> columnTypes = new HashMap<>();
//                for (String column : columns) {
//                    Object value = firstRow.get(column);
//                    columnTypes.put(column, value != null ? value.getClass().getSimpleName() : "Unknown");
//                }
//                result.setColumnTypes(columnTypes);
//            } else {
//                // For empty results, get column info from metadata
//                result.setColumns(getColumnNamesFromQuery(jdbcTemplate, sqlQuery));
//            }
//            
//            log.info("SELECT query executed successfully. Rows returned: {}, Columns: {}", 
//                    results.size(), result.getColumns());
//            return result;
//            
//        } catch (Exception e) {
//            log.error("Error executing SELECT query: {}", e.getMessage());
//            return QueryExecutionResult.error(e.getMessage(), System.currentTimeMillis() - startTime);
//        }
//    }
//    
//    /**
//     * Get column names from query when no results are returned
//     */
//    private List<String> getColumnNamesFromQuery(JdbcTemplate jdbcTemplate, String sqlQuery) {
//        List<String> columns = new ArrayList<>();
//        try {
//            // Use LIMIT 0 to avoid retrieving actual data rows
//            String metadataQuery = sqlQuery + " LIMIT 0";
//
//            jdbcTemplate.query(metadataQuery, (ResultSetExtractor<Void>) rs -> {
//                ResultSetMetaData metaData = rs.getMetaData();
//                int columnCount = metaData.getColumnCount();
//                for (int i = 1; i <= columnCount; i++) {
//                    columns.add(metaData.getColumnName(i));
//                }
//                return null; // Required by ResultSetExtractor
//            });
//
//        } catch (Exception e) {
//            log.warn("Could not extract column names from query: {}", e.getMessage());
//        }
//        return columns;
//    }
//
//    
//    /**
//     * Execute INSERT, UPDATE, DELETE queries
//     */
//    private QueryExecutionResult executeUpdateQuery(JdbcTemplate jdbcTemplate, String sqlQuery, long startTime) {
//        try {
//            int affectedRows = jdbcTemplate.update(sqlQuery);
//            
//            QueryExecutionResult result = new QueryExecutionResult();
//            result.setSuccess(true);
//            result.setQueryType(determineQueryType(sqlQuery));
//            result.setRowsAffected(affectedRows);
//            result.setExecutionTimeMs(System.currentTimeMillis() - startTime);
//            
//            log.info("UPDATE query executed successfully. Rows affected: {}", affectedRows);
//            return result;
//            
//        } catch (Exception e) {
//            log.error("Error executing UPDATE query: {}", e.getMessage());
//            return QueryExecutionResult.error(e.getMessage(), System.currentTimeMillis() - startTime);
//        }
//    }
//    
//    /**
//     * Execute other types of queries (DDL, etc.)
//     */
//    private QueryExecutionResult executeGenericQuery(JdbcTemplate jdbcTemplate, String sqlQuery, long startTime) {
//        try {
//            jdbcTemplate.execute(sqlQuery);
//            
//            QueryExecutionResult result = new QueryExecutionResult();
//            result.setSuccess(true);
//            result.setQueryType(determineQueryType(sqlQuery));
//            result.setExecutionTimeMs(System.currentTimeMillis() - startTime);
//            
//            log.info("Generic query executed successfully");
//            return result;
//            
//        } catch (Exception e) {
//            log.error("Error executing generic query: {}", e.getMessage());
//            return QueryExecutionResult.error(e.getMessage(), System.currentTimeMillis() - startTime);
//        }
//    }
//    
//    /**
//     * Get or create JdbcTemplate for the specified database
//     */
//    private JdbcTemplate getJdbcTemplate(String databaseId, DatabaseType dbType) throws SQLException {
//        return jdbcTemplates.computeIfAbsent(databaseId, id -> {
//            try {
//                DataSource dataSource = getOrCreateDataSource(id, dbType);
//                return new JdbcTemplate(dataSource);
//            } catch (SQLException e) {
//                log.error("Failed to create JdbcTemplate for database: {}", id, e);
//                throw new RuntimeException("Failed to create database connection", e);
//            }
//        });
//    }
//    
//    /**
//     * Get or create DataSource for the specified database
//     */
//    private DataSource getOrCreateDataSource(String databaseId, DatabaseType dbType) throws SQLException {
//        return dataSources.computeIfAbsent(databaseId, id -> {
//            try {
//                DatabaseConfig config = databaseConfigService.getDatabaseConfig(id);
//                return createDataSource(config, dbType);
//            } catch (Exception e) {
//                log.error("Failed to create DataSource for database: {}", id, e);
//                throw new RuntimeException("Failed to create data source", e);
//            }
//        });
//    }
//    
//    /**
//     * Create DataSource based on database configuration
//     */
//    private DataSource createDataSource(DatabaseConfig config, DatabaseType dbType) {
//        DriverManagerDataSource dataSource = new DriverManagerDataSource();
//        
//        // Set driver class based on database type
//        switch (dbType) {
//            case MYSQL:
//                dataSource.setDriverClassName("com.mysql.cj.jdbc.Driver");
//                dataSource.setUrl("jdbc:mysql://" + config.getHost() + ":" + config.getPort() + "/" + config.getDatabase() + "?useSSL=false&allowPublicKeyRetrieval=true");
//                break;
//            case POSTGRESQL:
//                dataSource.setDriverClassName("org.postgresql.Driver");
//                dataSource.setUrl("jdbc:postgresql://" + config.getHost() + ":" + config.getPort() + "/" + config.getDatabase());
//                break;
//            case SQLSERVER:
//                dataSource.setDriverClassName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
//                dataSource.setUrl("jdbc:sqlserver://" + config.getHost() + ":" + config.getPort() + ";databaseName=" + config.getDatabase());
//                break;
//            case ORACLE:
//                dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
//                dataSource.setUrl("jdbc:oracle:thin:@" + config.getHost() + ":" + config.getPort() + ":" + config.getDatabase());
//                break;
//            default:
//                throw new IllegalArgumentException("Unsupported database type: " + dbType);
//        }
//        
//        dataSource.setUsername(config.getUsername());
//        dataSource.setPassword(config.getPassword());
//        
//        log.info("Created DataSource for database: {} ({})", config.getDatabase(), dbType);
//        return dataSource;
//    }
//    
//    /**
//     * Determine the type of SQL query
//     */
//    private String determineQueryType(String sqlQuery) {
//        String trimmedQuery = sqlQuery.trim().toUpperCase();
//        
//        if (trimmedQuery.startsWith("SELECT")) return "SELECT";
//        if (trimmedQuery.startsWith("INSERT")) return "INSERT";
//        if (trimmedQuery.startsWith("UPDATE")) return "UPDATE";
//        if (trimmedQuery.startsWith("DELETE")) return "DELETE";
//        if (trimmedQuery.startsWith("CREATE")) return "CREATE";
//        if (trimmedQuery.startsWith("DROP")) return "DROP";
//        if (trimmedQuery.startsWith("ALTER")) return "ALTER";
//        
//        return "OTHER";
//    }
//    
//    /**
//     * Test database connection
//     */
//    public boolean testConnection(String databaseId, DatabaseType dbType) {
//        try {
//            JdbcTemplate jdbcTemplate = getJdbcTemplate(databaseId, dbType);
//            jdbcTemplate.queryForObject("SELECT 1", Integer.class);
//            log.info("Database connection test successful for: {}", databaseId);
//            return true;
//        } catch (Exception e) {
//            log.error("Database connection test failed for: {}", databaseId, e);
//            return false;
//        }
//    }
//    
//    /**
//     * Get database metadata (tables, columns, etc.)
//     */
//    public DatabaseMetadata getDatabaseMetadata(String databaseId, DatabaseType dbType) {
//        try {
//            DataSource dataSource = getOrCreateDataSource(databaseId, dbType);
//            
//            try (Connection connection = dataSource.getConnection()) {
//                DatabaseMetaData metaData = connection.getMetaData();
//                DatabaseMetadata dbMetadata = new DatabaseMetadata();
//                
//                // Get tables
//                List<String> tables = new ArrayList<>();
//                try (ResultSet rs = metaData.getTables(null, null, "%", new String[]{"TABLE"})) {
//                    while (rs.next()) {
//                        tables.add(rs.getString("TABLE_NAME"));
//                    }
//                }
//                dbMetadata.setTables(tables);
//                
//                // Get columns for each table (limit to first 10 tables for performance)
//                Map<String, List<String>> tableColumns = new HashMap<>();
//                for (int i = 0; i < Math.min(tables.size(), 10); i++) {
//                    String tableName = tables.get(i);
//                    List<String> columns = new ArrayList<>();
//                    
//                    try (ResultSet rs = metaData.getColumns(null, null, tableName, "%")) {
//                        while (rs.next()) {
//                            columns.add(rs.getString("COLUMN_NAME"));
//                        }
//                    }
//                    tableColumns.put(tableName, columns);
//                }
//                dbMetadata.setTableColumns(tableColumns);
//                
//                log.info("Retrieved metadata for database: {} - Tables: {}", databaseId, tables.size());
//                return dbMetadata;
//            }
//        } catch (Exception e) {
//            log.error("Error retrieving database metadata for: {}", databaseId, e);
//            return null;
//        }
//    }
//    
//    /**
//     * Close and remove cached connections for a database
//     */
//    public void closeDatabase(String databaseId) {
//        jdbcTemplates.remove(databaseId);
//        dataSources.remove(databaseId);
//        log.info("Closed database connections for: {}", databaseId);
//    }
//}