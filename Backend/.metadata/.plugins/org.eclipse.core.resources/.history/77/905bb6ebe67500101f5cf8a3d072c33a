package com.datalingo.one.service;

import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.datalingo.one.model.dto.TableSchema;
import com.datalingo.one.model.entity.ProcessedFile;

public class ExcelProcessingService {
	
	public void processExcelFile(ProcessedFile processedFile) throws Exception {
	    try (FileInputStream fis = new FileInputStream(processedFile.getFilePath())) {
	        
	        Workbook workbook;
	        
	        // Determine workbook type based on file extension
	        if (processedFile.getOriginalFileName().toLowerCase().endsWith(".xlsx")) {
	            workbook = new XSSFWorkbook(fis);
	        } else {
	            workbook = new HSSFWorkbook(fis);
	        }
	        
	        // Get first sheet
	        Sheet sheet = workbook.getSheetAt(0);
	        
	        if (sheet.getPhysicalNumberOfRows() == 0) {
	            throw new Exception("Excel sheet is empty");
	        }
	        
	        // Read headers from first row
	        Row headerRow = sheet.getRow(0);
	        if (headerRow == null) {
	            throw new Exception("Excel file has no header row");
	        }
	        
	        List<String> headers = new ArrayList<>();
	        for (int i = 0; i < headerRow.getLastCellNum(); i++) {
	            Cell cell = headerRow.getCell(i);
	            headers.add(cell != null ? getCellValueAsString(cell) : "column_" + i);
	        }
	        
	        // Read data rows
	        List<String[]> dataRows = new ArrayList<>();
	        for (int rowIndex = 1; rowIndex <= sheet.getLastRowNum(); rowIndex++) {
	            Row row = sheet.getRow(rowIndex);
	            if (row == null) continue;
	            
	            String[] rowData = new String[headers.size()];
	            for (int colIndex = 0; colIndex < headers.size(); colIndex++) {
	                Cell cell = row.getCell(colIndex);
	                rowData[colIndex] = cell != null ? getCellValueAsString(cell) : "";
	            }
	            dataRows.add(rowData);
	        }
	        
	        // Generate table name
	        String tableName = generateTableName(processedFile.getOriginalFileName());
	        processedFile.setTableName(tableName);
	        
	        // Create table schema
	        TableSchema schema = createSchemaFromExcel(headers, dataRows, tableName);
	        
	        // Create database table and insert data
	        tableCreator.createTableFromSchema(schema, dataRows);
	        
	        // Update file metadata
	        processedFile.setRowCount(dataRows.size());
	        processedFile.setColumnCount(headers.size());
	        
	        workbook.close();
	        
	    } catch (Exception e) {
	        throw new Exception("Failed to process Excel file: " + e.getMessage(), e);
	    }
	}


}
